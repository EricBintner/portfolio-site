
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//class set-up
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
var NewEffect = EfxBase.extend({
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//init var
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//------------------------------------------------------------------------
	//Boolean
	//------------------------------------------------------------------------
	paused:undefined,
	immediateRender:true,
	//------------------------------------------------------------------------
	//Object
	//------------------------------------------------------------------------
	util:undefined,
	utilInstances:[],
	events:undefined,
	eventsInstance:undefined,
	noExist:undefined,
	//------------------------------------------------------------------------
	//MovieClip
	//------------------------------------------------------------------------
	master:undefined,
	//------------------------------------------------------------------------
	//String
	//------------------------------------------------------------------------
	id:"",
	callFunction:undefined,
	MASTER_TYPE:undefined,
	//------------------------------------------------------------------------
	//array
	//------------------------------------------------------------------------
	tweensArr:[],
	errorChkArr:[],
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//Constructor
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	init:function() {
	},
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//Methods
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	preStart:function(_master_init, _dur_init, _obj_init, _callFunction_init, throwError) {
		_callFunction_init = GenFun.setDefaults(_callFunction_init,null);
		throwError = GenFun.setDefaults(throwError,true);
		//------------------------------------------------------
		Trace.output(this.traceID, "init");
		//------------------------------------------------------
		this.callFunction = _callFunction_init;
		this.master = _master_init;
		this.duration = _dur_init;
		this._obj = _obj_init;
		//------------------------------------------------------
		if (this._obj != undefined) this.noExist = SetPublicProp.go(this, this._obj);
		//------------------------------------------------------
		this.util_CHK();
		//------------------------------------------------------
		if (this.events != undefined) {
			this.eventsInstance = new Events(this, this.events);
		}
		//------------------------------------------------------
		if (this.eventsInstance != null) this.eventsInstance.init_EvtDis();
		//------------------------------------------------------
		this.masterType_CHK();
		//------------------------------------------------------
		this.manualStart_CHK();
		//------------------------------------------------------
		//error_CHK();
		//------------------------------------------------------	
		return this;
	},
	//------------------------------------------------------------------------------------------------------------------
	manualStart_CHK:function() {
		if (!this.manualStart) {
			if (!this.immediateRender) {
				//--------------------------------------------------
				this.tweensArr.push(TweenEngine.delayedCall(delay, $.proxy(this.start, this)));
				//--------------------------------------------------
				this.delay = 0;
			} else {
				this.start();
			}
		} else {
			this.manualEnabled = true;
		}
	},
	//------------------------------------------------------------------------------------------------------------------
	masterType_CHK:function() {
		//------------------------------------------------------------------------
		//Init var
		//------------------------------------------------------------------------
		var className;
		var classDef;
		//------------------------------------------------------------------------
		if (this.MASTER_TYPE != undefined) {
			if (getQualifiedClassName(this.master) != this.MASTER_TYPE) {
				ThrowError.go("master must be dataType '"+this.MASTER_TYPE+"' , master is currently datatype '"+getQualifiedClassName(this.master)+"'", this);
			}
		}
	},
	//------------------------------------------------------------------------------------------------------------------
	util_CHK:function() {
		Trace.output(this.traceID, "util_CHK");
		//------------------------------------------------------------------------
		//Init var
		//------------------------------------------------------------------------
		var i = 0;
		var utilInstance;
		//------------------------------------------------------------------------
		if (this.util != null) {
			//EfxPlugin.getPlugin(EfxUtility.UTILITY);
			for (i = 0; i < util.length; i++) {
				//utilInstance = EfxPlugin.getPlugin(EfxUtility.UTILITY).go(master, util[i]);
				this.utilInstance = Utility.go(this.master, this.util[i]);
				this.master = this.utilInstance.pickUp;
				this.utilInstances.push(this.utilInstance);
			}
		}
	},
	//------------------------------------------------------------------------------------------------------------------
	manual:function() {
		if (this.manualEnabled) {
			if (!this.immediateRender) {
				//--------------------------------------------------
				this.tweensArr.push(TweenEngine.delayedCall(this.delay, $.proxy(this.start, this)));
				//--------------------------------------------------
				this.delay = 0;
			} else {
				this.start();
			}
		} else {
			//ThrowError.go("manualEnabled is set to false", this);
		}
	},
	//------------------------------------------------------------------------------------------------------------------
	start:function() {
		Trace.output(traceID, "start");
		if (this.eventsInstance != undefined) {
			this.tweensArr.push(TweenEngine.delayedCall(this.delay, $.proxy(this.eventsInstance.start_EvtDis, this)));
			this.tweensArr.push(TweenEngine.delayedCall(this.delay + this.duration, $.proxy(this.eventsInstance.complete_EvtDis, this)));
			this.tweensArr.push(TweenEngine.delayedCall(this.delay + this.duration + this.holdTime, $.proxy(this.eventsInstance.holdTimeComplete_EvtDis, this)));
		}
	}
});
